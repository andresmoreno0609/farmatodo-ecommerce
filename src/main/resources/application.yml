# =========================
# Base (común a todos los perfiles)
# =========================
server:
  port: 8080

spring:
  testcontainers:
    enabled: false

  application:
    name: farmatodo-ecommerce

  jackson:
    default-property-inclusion: non_null

  flyway:
    enabled: true
    locations: classpath:db/migration

  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: validate         # valida el esquema contra Flyway

  sql:
    init:
      mode: never

  # Correo (Mailhog por defecto; sobreescribir en prod)
  mail:
    host: ${MAIL_HOST:localhost}
    port: ${MAIL_PORT:1025}
    username: ${MAIL_USER:}
    password: ${MAIL_PASS:}
    properties:
      mail.smtp.auth: ${MAIL_AUTH:false}
      mail.smtp.starttls.enable: ${MAIL_STARTTLS:false}

  # Async / Scheduling (prefijo correcto para que Spring los tome)
  task:
    execution:
      pool:
        core-size: ${ASYNC_CORE_POOL_SIZE:4}
        max-size: ${ASYNC_MAX_POOL_SIZE:8}
        queue-capacity: ${ASYNC_QUEUE_CAPACITY:100}
    scheduling:
      pool:
        size: ${SCHEDULER_POOL_SIZE:2}

# Swagger / OpenAPI
springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    display-request-duration: true

# Actuator
management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: when_authorized

# Seguridad (API Key)
security:
  apiKeyHeader: X-API-KEY
  apiKey: ${SECURITY_API_KEY:changeme-dev}

# CorrelationId
correlation:
  header: X-Correlation-Id

# Tokenización
tokenization:
  rejectionProbability: ${TOKENIZATION_REJECTION_PROBABILITY:0.2}

# Búsqueda de productos
search:
  minStock: ${SEARCH_MIN_STOCK:1}

# Pagos
payments:
  approvalProbability: ${PAYMENTS_APPROVAL_PROBABILITY:0.8}
  retry:
    maxAttempts: ${PAYMENTS_RETRY_MAX_ATTEMPTS:3}
    initialMs: ${PAYMENTS_RETRY_INITIAL_MS:500}
    multiplier: ${PAYMENTS_RETRY_MULTIPLIER:2.0}
    cadenceSeconds: ${PAYMENTS_RETRY_CADENCE_SECONDS:30}

# Notificaciones (correo del operador)
notifications:
  operatorEmail: ${OPERATOR_EMAIL:andresmoreno1991609@gmail.com}

# Cifrado AES (usa Base64 para la clave)
crypto:
  algorithm: AES/GCM/NoPadding
  keyB64: ${CRYPTO_KEY_B64:CNWtBuphxqhraNUkFrzzIU0dtMMoazglr/tD6iDXR24=}
  keyVersion: ${CRYPTO_KEY_VERSION:1}
  iv-length: 12

# Logging
logging:
  level:
    org.springframework.security: DEBUG
    root: INFO
    com.farmatodo: DEBUG
  pattern:
    console: "%d{ISO8601} %-5level [%X{correlationId}] %logger - %msg%n"

# =========================
# Perfil DEV
# =========================
---
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:h2:mem:ecommerce_dev;MODE=PostgreSQL;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driver-class-name: org.h2.Driver
    username: sa
    password: sa
  jpa:
    properties:
      hibernate.dialect: org.hibernate.dialect.H2Dialect
  h2:
    console:
      enabled: true
      path: /h2-console
  mail:
    host: ${MAIL_HOST:mailhog}
    port: ${MAIL_PORT:1025}
    properties:
      mail.smtp.auth: false
      mail.smtp.starttls.enable: false

logging:
  level:
    com.farmatodo: DEBUG

# =========================
# Perfil QA
# =========================
---
spring:
  config:
    activate:
      on-profile: qa
  datasource:
    url: jdbc:h2:mem:ecommerce_qa;MODE=PostgreSQL;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driver-class-name: org.h2.Driver
    username: sa
    password: sa
  jpa:
    properties:
      hibernate.dialect: org.hibernate.dialect.H2Dialect
  mail:
    host: ${MAIL_HOST:mailhog}
    port: ${MAIL_PORT:1025}
    properties:
      mail.smtp.auth: false
      mail.smtp.starttls.enable: false

logging:
  level:
    com.farmatodo: INFO

# =========================
# Perfil PROD
# =========================
---
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: jdbc:postgresql://${DB_HOST:postgres}:${DB_PORT:5432}/${DB_NAME:ecommerce}
    driver-class-name: org.postgresql.Driver
    username: ${DB_USER:app}
    password: ${DB_PASSWORD:app}
    hikari:
      maximum-pool-size: 10
      minimum-idle: 2
      connection-timeout: 30000
  jpa:
    properties:
      hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USER}
    password: ${MAIL_PASS}
    properties:
      mail.smtp.auth: true
      mail.smtp.starttls.enable: true

# En PROD obligamos env vars críticas
security:
  apiKey: ${SECURITY_API_KEY}
crypto:
  keyB64: ${CRYPTO_KEY_B64}
  keyVersion: ${CRYPTO_KEY_VERSION:1}
notifications:
  operatorEmail: ${OPERATOR_EMAIL}

logging:
  level:
    root: INFO
    com.farmatodo: INFO
